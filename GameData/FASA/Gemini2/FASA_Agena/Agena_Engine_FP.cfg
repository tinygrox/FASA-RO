PART
{

// --- general parameters ---
name = FASAAgena_Engine_FP
module = Part
author = Frizzank

// --- asset parameters ---
MODEL
{
  model = FASA/Gemini2/FASA_Agena/Agena_Engine_FP
}
rescaleFactor = 1.0
scale = 1.0

// --- node definitions ---
node_stack_top = 0.0, 0.5, 0.0, 0.0, 1.0, 0.0
node_stack_bottom = 0.0, -0.425, 0.0, 0.0, -1.0, 0.0
node_stack_connect1 = 0.624, -0.5, 0.0, 0.0, 1.0, 0.0, 0
node_stack_connect2 = -0.624, -0.5, 0.0, 0.0, 1.0, 0.0, 0

stackSymmetry = 1

// --- FX definitions ---

fx_exhaustFlame_white_tiny = 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, running


// --- Sound FX definition ---

sound_vent_medium = engage
sound_rocket_mini = running
sound_vent_soft = disengage
sound_explosion_low = flameout

// --- editor parameters ---
TechRequired = advFlightControl
entryCost = 3800
cost = 650
category = Propulsion
subcategory = 0
title = #FASA_Agena_Engine_FP_title//Agena Flight Pack
manufacturer = FASA
description = #FASA_Agena_Engine_FP_desc//A flight pack for the Agena Target Vehicle. Contains secondary monopropelent engines and RCS thrusters.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 0.25
dragModelType = default
maximum_drag = .2
minimum_drag = .2
angularDrag = 2
crashTolerance = 8
breakingForce = 25
breakingTorque = 25
maxTemp = 1200

stagingIcon = RCS_MODULE
 
MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = thrustTransform
	exhaustDamage = True
	ignitionThreshold = 0.01
	minThrust = 0
	maxThrust = 20
	heatProduction = 20
	fxOffset = 0, 0, 0.0
	PROPELLANT
	{
		name = MonoPropellant
       	        ratio = 1.0
		DrawGauge = True
	}

	atmosphereCurve
 	{
   	 key = 0 310
  	 key = 1 290
 	}
	
}

MODULE
{
	name = ModuleRCSFX
	runningEffectName = running
	resourceFlowMode = STAGE_PRIORITY_FLOW
	thrusterTransformName = thrustTransformRCS
	thrusterPower = .5
	resourceName = MonoPropellant
	fxOffset = 0, 0, 0.0
	atmosphereCurve
 	{
   	 key = 0 290
  	 key = 1 230
 	}
}

EFFECTS
	{
		running
		{
			AUDIO_MULTI
			{
				channel = Ship
				transformName = thrustTransformRCS
				clip = sound_rocket_mini
				volume = 0.0 0.0
				volume = 0.1 0.0
				volume = 0.5 0.025
				volume = 1.0 0.1
				pitch = 0.0 0.75
				pitch = 1.0 1.5
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = Squad/FX/Monoprop_small
				transformName = thrustTransformRCS
				emission = 0.0 0.0
				emission = 0.1 0.0
				emission = 1.0 1.0
				speed = 0.0 0.8
				speed = 1.0 1.0
				localRotation = -90, 0, 0
			}
		}		
	}

RESOURCE
{
 name = MonoPropellant
 amount = 200
 maxAmount = 200
}
//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 8

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.15
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = all	

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 40

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }
}




